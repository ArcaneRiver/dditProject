package com.homecat.sweethome.service.impl.publicFacilities;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.homecat.sweethome.mapper.publicFacilities.BookMapper;
import com.homecat.sweethome.service.publicFacilities.BookService;
import com.homecat.sweethome.vo.publicFacilities.BookLoanVO;
import com.homecat.sweethome.vo.publicFacilities.BookVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class BookServiceImpl implements BookService{

	@Autowired
	BookMapper bookMapper;
	
	@Override
	public List<BookVO> bookList(Map<String, Object> map) {
		return this.bookMapper.bookList(map);
	}

	@Override
	public int getTotal(Map<String, Object> map) {
		return this.bookMapper.getTotal(map);
	}

	@Override
	public BookVO detail(BookVO bookVO) {
		return this.bookMapper.detail(bookVO);
	}

	
	@Override
	public int rentalAjax(BookLoanVO bookLoanVO) {
		int result =  this.bookMapper.rentalAjax(bookLoanVO);
		log.info("retUpdate(1) -> result : " + result);
		
		BookVO bookVO = new BookVO();
		bookVO.setBookCode(bookLoanVO.getBookCode());
		
        result += this.bookMapper.stateAjax(bookVO);
        log.info("rentalAjax -> state result  : " + result);
        
        return result;
	}

	@Override
	public int stateAjax(BookVO bookVO) {
		return this.bookMapper.stateAjax(bookVO);
	}

	@Override
	public int checkmem(String memId) {
		return this.bookMapper.checkmem(memId);
	}

	
	
	@Override
	public int bookDelAjax(BookVO bookVO) {
		return this.bookMapper.bookDelAjax(bookVO);
	}

	@Override
	public int bookUpAjax(BookVO bookVO) {
		return this.bookMapper.bookUpAjax(bookVO);
	}



	@Override
	public int getTotal2(Map<String, Object> map) {
		return this.bookMapper.getTotal2(map);
	}

	@Override
	public List<BookLoanVO> rentalList(Map<String, Object> map) {
		
		
		List<BookLoanVO> result =  this.bookMapper.rentalList(map);
		log.info("rentalList :> {}", result);
		
		 int updateCount = this.bookMapper.lateRet(); 
		log.info("lateRet :> {}", updateCount);
		
		return result;
	}

	@Transactional
	@Override
	public int retUpdate(BookLoanVO bookLoanVO) {
		//bookCode
		int result = this.bookMapper.retUpdate(bookLoanVO);
		log.info("retUpdate(1) -> result : " + result);
		
		//bookCode
		BookVO bookVO = new BookVO();
		bookVO.setBookCode(bookLoanVO.getBookCode());
		
		result += this.bookMapper.boUpdate(bookVO);
		log.info("retUpdate + boUpdate -> result : " + result);
		
		return result;
	}

	@Override
	public int boUpdate(BookVO bookVO) {
		return this.bookMapper.boUpdate(bookVO);
	}

	@Override
	public BookLoanVO reDetail(BookLoanVO bookLoanVO) {
		return this.bookMapper.reDetail(bookLoanVO);
	}

	@Override
	public String getBookCode() {
		return this.bookMapper.getBookCode();
	}

	@Override
	public int createAjax(BookVO bookVO) {
		return this.bookMapper.createAjax(bookVO);
	}

	@Override
	public List<BookLoanVO> loanCount() {
		return this.bookMapper.loanCount();
	}


}
