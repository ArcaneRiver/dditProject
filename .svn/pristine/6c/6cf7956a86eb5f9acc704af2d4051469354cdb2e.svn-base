package com.homecat.sweethome.controller.board;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.homecat.sweethome.service.board.BoardService;
import com.homecat.sweethome.unit.ArticlePage;
import com.homecat.sweethome.vo.board.BoardVO;
import com.homecat.sweethome.vo.board.ReplyVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/board")
@Controller
public class BoardController {

	@Autowired
	BoardService boardService;
	
	@GetMapping("/list")
	public String boardList(Model model,
			@RequestParam(value = "boardCat", required = false, defaultValue = "") String boardCat, 
			@RequestParam(value = "currentPage", required = false, defaultValue = "1") int currentPage,
			@RequestParam(value = "keyword", required = false, defaultValue = "") String keyword) {
		log.info("boardList에 왔다");
		
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("keyword",keyword );
		map.put("currentPage", currentPage);
		map.put("boardCat", boardCat);
		log.info("boardList->map: " + map);
		
		int size = 10;
		
		List<BoardVO> boardVOList = this.boardService.getList(map);
		log.info("boardVOList: " + boardVOList);
		
		int total = this.boardService.getTotal(map);
		log.info("boardVOList->total: " + total);
		
		model.addAttribute("boardCat", boardCat);
		model.addAttribute("articlePage", new ArticlePage<BoardVO>(total, currentPage, size, boardVOList, keyword, boardCat));
		
		return "board/list";
	}
	
	@ResponseBody
	@PostMapping("/list")
	public ArticlePage<BoardVO> boardListAjax(@RequestBody Map<String, Object> map) {
		log.info("boardListAjax->data: " + map);
		
		int size = 10;
		
		int total = this.boardService.getTotal(map);
		log.info("boardListAjax->total: " + total);
		
		List<BoardVO> boardVOList = this.boardService.getList(map);
		log.info("boardListAjax->boardVOList: " + boardVOList);
		
		return new ArticlePage<BoardVO>(total, Integer.parseInt(map.get("currentPage").toString()), size, boardVOList, map.get("keyword").toString(), map.get("boardCat").toString());
	}
	
	@GetMapping("/detail")
	public String boardDetail(Model model, String brdNo) {
		log.info("boardList에 왔다");
		
		BoardVO boardVO = this.boardService.getDetail(brdNo);
		log.info("boardVO: " + boardVO);
		
		model.addAttribute("boardVO", boardVO);
		
		return "board/detail";
	}
	
	@ResponseBody
	@PostMapping("/countLike")
	public int countLike(@RequestBody HashMap<String, String> data) {
		log.info("countLikeAjax->data: " + data);

		int likeCnt = this.boardService.countLike(data);
		log.info("countLikeAjax->cnt: " + likeCnt);
		
		return likeCnt;
	}
	
	@ResponseBody
	@PostMapping("reply")
	public List<ReplyVO> replyAjax(@RequestBody ReplyVO replyVO) {
		log.info("replyPost->replyVO: " + replyVO);
		
		List<ReplyVO> replyList = this.boardService.insertReply(replyVO);
		log.info("replyPost->replyList: " + replyList);
		
		return replyList;
	}
	
	@GetMapping("/insert")
	public String brdInsert() {
		log.info("brdInsert에 왔다");
		return "board/insert";
	}
	
	@PostMapping("/insert")
	public String brdInsertPost(BoardVO boardVO) {
		log.info("brdInsertPost->boardVO: " + boardVO);
		
		boardVO.setDanjiCode("d001");	// 단지코드 하드코딩
		
		int result = this.boardService.insertBoard(boardVO);
		log.info("brdInsertPost->result: " + result);
		
		return "redirect:/board/list?boardCat="+boardVO.getBrdCat();
	}
}
