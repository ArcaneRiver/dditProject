<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
<!DOCTYPE html>
<html>
<head>
<title>설문조사 수정 페이지</title>
<style>
        body {
            font-family: Arial, sans-serif;
        }
        h2 {
            color: #333;
        }
        fieldset {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }
        legend {
            font-weight: bold;
        }
        input[type="text"] {
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
            margin-top: 5px;
        }
        table {
            width: 100%;
            margin-top: 20px;
            text-align: center;
        }
        input[type="submit"], input[type="reset"], input[type="button"] {
            padding: 10px 20px;
            margin: 5px;
        }
    </style>
<script>
	// 질문 추가 버튼
	let questionCount = ${surveyVO.surveyDetails.size()};	//기존 질문의 개수를 초기값으로 설정
	
	// 기존 설문 질문 목록에서 마지막 질문 코드 추출
    let lastSvdCode = "${surveyVO.surveyDetails[surveyVO.surveyDetails.size() - 1].svdCode}";
	
 	// 다음 질문 코드 생성 함수
	function getNextSvdCode(currentSvdCode){
		const prefix = currentSvdCode.match(/^\D+/)[0];
        const number = parseInt(currentSvdCode.match(/\d+$/)[0], 10) + 1;
        return prefix + number.toString().padStart(3, '0');
	}
	
	//질문 추가 함수
	function addQuestion(){
		questionCount++;
		
		const fieldset = document.createElement("fieldset");
		fieldset.setAttribute("name", "question");
		
		const legend = document.createElement("legend");
		legend.textContent = "Q" + questionCount;
		fieldset.appendChild(legend);
		
		const input = document.createElement("input");
		input.type = "text";
		input.name = "surveyDetails[" + (questionCount - 1) + "].svdItem";
		input.placeholder = "질문을 입력해주세요";
		fieldset.appendChild(input);
		
		//다음 svd_code 생성
		lastSvdCode = getNextSvdCode(lastSvdCode);
		
        const hiddenInputSvdCode = document.createElement("input");
        hiddenInputSvdCode.type = "hidden";
        hiddenInputSvdCode.name = "surveyDetails[" + (questionCount - 1) + "].svdCode";
        hiddenInputSvdCode.value = lastSvdCode;
        fieldset.appendChild(hiddenInputSvdCode);

        const hiddenInputSvCode = document.createElement("input");
        hiddenInputSvCode.type = "hidden";
        hiddenInputSvCode.name = "surveyDetails[" + (questionCount - 1) + "].svCode";
        hiddenInputSvCode.value = "${surveyVO.svCode}";
        fieldset.appendChild(hiddenInputSvCode);
		
		
		document.getElementById("questions").appendChild(fieldset);
	}
	
    // 질문 삭제 버튼(-)
    function removeQuestion(){
    	const questionsDiv = document.getElementById("questions");
        if (questionsDiv.children.length > 1) {
            questionsDiv.removeChild(questionsDiv.lastElementChild);
            questionCount--;
        } else {
        	alert("최소 1개의 질문이 필요합니다.");
        }
	}    
	
	// 유효성 검사
	function validateForm() {
    	const beginTm = document.getElementById("beginTm").value;
    	const endTm = document.getElementById("endTm").value;
        const questions = document.querySelectorAll("[name^='surveyDetails']");
        	let isValid = true;
            let errorMsg = '';

            if (!beginTm) {
                isValid = false;
                errorMsg += "시작일을 입력해주세요.\n";
            }

            if (!endTm) {
                isValid = false;
                errorMsg += "마감일을 입력해주세요.\n";
            }

            if (beginTm && endTm && new Date(beginTm) > new Date(endTm)) {
                isValid = false;
                errorMsg += "마감일은 시작일보다 빠를 수 없습니다.\n";
            }

            let hasQuestion = false;
            questions.forEach(question => {
                if (question.value.trim() !== '') {
                    hasQuestion = true;
                }
            });

            if (!hasQuestion) {
                isValid = false;
                errorMsg += "최소 한 개 이상의 질문을 등록해야 합니다.\n";
            }

            if (!isValid) {
                alert(errorMsg);
            }

            return isValid;
        }
	
    function goBack() {
        const prevURL = document.referrer;
        if (prevURL) {
            window.location.href = prevURL;
        } else {
            window.history.back();
        }
    }	
</script>
</head>
<body>
    <h2>설문조사 수정</h2>
    <form:form action="/survey/updatePost" method="post" modelAttribute="surveyVO" onsubmit="return validateForm()">
        <input type="hidden" name="svCode" value="${svCode}" />
        <p>설문 제목: <form:input path="svTitle" id="svTitle" placeholder="제목을 입력해주세요" /></p>
        <p>시작일: <input type="datetime-local" id="beginTm" name="beginTm" value="${surveyVO.beginTm}" /></p>
        <p>마감일: <input type="datetime-local" id="endTm" name="endTm" value="${surveyVO.endTm}" /></p>

        <div id="questions">
            <c:forEach var="detail" items="${surveyVO.surveyDetails}" varStatus="loop">
                <fieldset>
                    <legend>Q${loop.index + 1}</legend>
                    <form:input path="surveyDetails[${loop.index}].svdItem" value="${detail.svdItem}" placeholder="질문을 입력해주세요" />
                    <input type="hidden" name="surveyDetails[${loop.index}].svdCode" value="${detail.svdCode}" />
                    <input type="hidden" name="surveyDetails[${loop.index}].svCode" value="${surveyVO.svCode}" />
                </fieldset>
            </c:forEach>
        </div>

        <table>
            <tr>
                <td><input type="submit" value="수정 완료"></td>
              	<td><input type="button" value="취소" onclick="goBack()"></td>
                <td><input type="button" value="+" onclick="addQuestion()"></td>
                <td><input type="button" value="-" onclick="removeQuestion()"></td>
            </tr>
        </table>
    </form:form>

</body>
</html>
