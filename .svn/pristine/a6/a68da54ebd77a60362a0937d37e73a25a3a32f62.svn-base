package com.homecat.sweethome.controller.charge;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.homecat.sweethome.service.charge.ChargeService;
import com.homecat.sweethome.vo.charge.ChargeItemVO;
import com.homecat.sweethome.vo.member.MemberVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/charge")
@Controller
public class ChargeController {

	@Autowired
	ChargeService chargeService;

	String danjiCode = "D001";
	
	@GetMapping("/admin/insert")
	public String chargeInsert(Model model) {
		log.info("chargeInsert에 왔다");
		
		List<String> dongList = this.chargeService.getDongList(danjiCode);
		log.info("dongList: " + dongList);
		model.addAttribute("dongList", dongList);
		
		return "admin/charge/insert";
	}
	
	@ResponseBody
	@PostMapping("/dongSelAjax")
	public List<String> dongSelAjax(@RequestBody HashMap<String, String> data) {
		log.info("dongSelAjax->dongCode: " + data);
		
		List<String> roomList = this.chargeService.getRoomList(data.get("dongCode"));
		log.info("roomList: " + roomList);
		
		return roomList;
	}
	
	@PostMapping("/admin/insert")
	public String chargeInsertPost(Model model, ChargeItemVO chargeItemVO) {
		log.info("chargeInsertPost->chargeItemVO: " + chargeItemVO);

		int cnt = this.chargeService.chargeInsert(chargeItemVO);
		log.info("chargeInsertPost->cnt" + cnt);
		
		return "redirect:/charge/admin/insert";
	}
	
	@GetMapping("/admin/list")
	public String chargeList(Model model) {
		log.info("chargeList에 왔다");

		List<String> dongList = this.chargeService.getDongList(danjiCode);
		log.info("dongList: " + dongList);
		model.addAttribute("dongList", dongList);
		
		List<ChargeItemVO> chargeList = this.chargeService.getChargeList(danjiCode);
		log.info("chargeList: " + chargeList);
		
		model.addAttribute("chargeList", chargeList);
		
		return "admin/charge/list";
	}
	
	@ResponseBody
	@PostMapping("/getLastInfo")
	public ChargeItemVO getLastInfo(@RequestBody String roomCode) {
		log.info("roomCode: " + roomCode);

		String lastYm = this.chargeService.getLastYm(roomCode);
		
		Map<String, String> data = new HashMap<String, String>();
		data.put("roomCode", roomCode);
		data.put("ym", lastYm);
		
		ChargeItemVO chargeItemVO = this.chargeService.getInfo(data).get(0);
		
		return chargeItemVO;
	}
	
	////////////////////////////// 입주민 ////////////////////////////////////
	
	@GetMapping("/resident/payment")
	public String chargeResidentPayment(Model model, HttpSession session) {
		log.info("chargeResidentPayment에 왔다");

		MemberVO member = (MemberVO) session.getAttribute("loginMember");
		
		String roomCode = member.getRoomCode();
		String ym = "2024-06";
		
		Map<String, String> data = new HashMap<String, String>();
		data.put("roomCode", roomCode);
		data.put("ym", ym);
		
		log.info("getChargeInfo->data: " + data);
		
		ChargeItemVO chargeItemVO = this.chargeService.getInfo(data).get(0);
		log.info("chargeItemVO: " + chargeItemVO);
		
		
		double avg = this.chargeService.getAvg(data);
		log.info("avg: " + avg);
		
		model.addAttribute("ym", ym);
		model.addAttribute("avg", avg);
		model.addAttribute("chargeItemVO", chargeItemVO);
		
		return "resident/charge/payment";
	}
	
	@ResponseBody
	@PostMapping("/getInfo")
	public List<ChargeItemVO> getChargeInfo(@RequestBody Map<String, String> data){
		log.info("getChargeInfo->data: " + data);
		
		data.put("roomCode", "D001_101_101");
		log.info("getChargeInfo->data: " + data);
		
		List<ChargeItemVO> chargeItemVOList = this.chargeService.getInfo(data);
		log.info("chargeItemVOList: " + chargeItemVOList);
		
		return chargeItemVOList;
	}
	
	@ResponseBody
	@PostMapping("/getPayYN")
	public String getPayYN(@RequestBody Map<String, Object> data) {
		log.info("paySuccess->data: " + data);
		
		String yn = this.chargeService.getPayYN(data);
		
		return yn;
	}
	
	@ResponseBody
	@PostMapping("/paySuccess")
	public int paySuccess(@RequestBody Map<String, Object> data) {
		log.info("paySuccess->data: " + data);
		
		int cnt = this.chargeService.payment(data);
		
		return cnt;
	}
}
