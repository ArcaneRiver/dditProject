<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib prefix="c"      uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="form"   uri="http://www.springframework.org/tags/form" %>
<%@ taglib prefix="spring" uri="http://www.springframework.org/tags"%>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
<style>
	.gridjs-search {
		display: flex;
		margin-left: auto !important;
	}
</style>
<div class="row">
	<div class="col-lg-12">
		<div class="card">
			<div class="card-header">
				<h4 class="card-title mb-0">입주민 승인 대기 현황</h4>
			</div>
			<!-- end card header -->
			<div class="card-body">
				<div id="table-search">
					<div role="complementary" class="gridjs gridjs-container" style="width: 100%;">
						<div class="d-flex justify-content-end">
							<div class="gridjs-search">
								<input type="search" placeholder="ID 또는 신청자 명 입력" aria-label="검색키워드"
									class="gridjs-input gridjs-search-input" id="searchInput">
							</div>
						</div>
						<div class="gridjs-wrapper" style="height: auto;">
							<table role="grid" class="gridjs-table" style="height: auto;">
								<thead class="gridjs-thead">
									<tr class="gridjs-tr">
										<th data-column-id="memId" class="gridjs-th" style="width: 150px;">
											<div class="gridjs-th-content">ID</div>
										</th>
										<th data-column-id="memNm" class="gridjs-th" style="width: 250px;">
											<div class="gridjs-th-content">신청자 명</div>
										</th>
										<th data-column-id="roomCode" class="gridjs-th" style="width: 250px;">
											<div class="gridjs-th-content">호실 번호</div>
										</th>
										<th data-column-id="memTelno" class="gridjs-th" style="width: 250px;">
											<div class="gridjs-th-content">연락처</div>
										</th>
										<th data-column-id="memBirth" class="gridjs-th" style="width: 250px;">
											<div class="gridjs-th-content">생년월일</div>
										</th>
										<th data-column-id="hshldrId" class="gridjs-th" style="width: 150px;">
											<div class="gridjs-th-content">세대주 ID</div>
										</th>
										<th data-column-id="regDt" class="gridjs-th" style="width: 150px;">
											<div class="gridjs-th-content">가입 신청일</div>
										</th>
										<th data-column-id="check" class="gridjs-th" style="width: 150px;">
											<div class="gridjs-th-content">승인 여부</div>
										</th>
									</tr>
								</thead>
								<tbody class="gridjs-tbody">
									<!-- 불러 올 데이터  -->
								</tbody>
							</table>
						</div>
						<div class="gridjs-footer">
							<div class="gridjs-pagination">
								<div role="status" aria-live="polite" class="gridjs-summary" title="Page 1 of 2">
									현재 대기자 수 : <b id="waitCnt"></b>
								</div>
								<nav aria-label="Page navigation example">
									<ul class="pagination justify-content-center" id="pagenation">
										<li class="page-item disabled">
											<a class="page-link" id="prevPage">Prev</a>
										</li>
										<li class="page-item active" aria-current="page">
											<span class="page-link" id="btn1">1</span>
										</li>
										<li class="page-item"><a class="page-link" id="btn2" type="button">2</a></li>
										<li class="page-item"><a class="page-link" id="btn3" type="button">3</a></li>
										<li class="page-item"><a class="page-link" id="btn4" type="button">4</a></li>
										<li class="page-item"><a class="page-link" id="btn5" type="button">5</a></li>
										<li class="page-item">
											<a class="page-link" id="nextPage" type="button">Next</a>
										</li>
									</ul>
								</nav>
							</div>
						</div>
						<div id="gridjs-temp" class="gridjs-temp"></div>
					</div>
				</div>
			</div>
			<!-- end card-body -->
		</div>
		<!-- end card -->
	</div>
	<!-- end col -->
</div>
<script>
	$(document).ready(function () {
		const itemsPerPage = 10; // 10개씩 나오게 페이징
		let curPage = 1;
		let totalItem = 0;
		let totalPages = 0;
		let startPage = 1;

		/* 디폴트 1*/
		memberList(curPage);

		// 페이지네이션 초기화 함수
		function initPagination(){
			let paginationContainer = $('#pagenation');
			paginationContainer.empty();
			
			paginationContainer.append('<li class="page-item disabled"><a class="page-link" id="prevPage">Prev</a></li>');
			
			//console.log(totalPages);

			let endPage = Math.min(startPage + 4, totalPages);

			for (let i = startPage; i <= endPage; i++) {
				paginationContainer.append('<li class="page-item ' + (i === curPage ? 'active' : '') + '"><a class="page-link" id="btn' + i + '" type="button">' + i + '</a></li>');
			}

			paginationContainer.append('<li class="page-item"><a class="page-link" id="nextPage" type="button">Next</a></li>');

			//Next버튼 클릭 이벤트
			$('#nextPage').on('click', function(){
				if(curPage > totalPages){
					curPage = totalPages;
					paginationContainer.append('<li class="page-item"><a class="page-link" id="nextPage" type="button disabled">Next</a></li>');
				}

				if(curPage < totalPages){
					curPage = curPage + 5;
					for (let i = startPage; i <= endPage; i++) {
						paginationContainer.empty();
						paginationContainer.append('<li class="page-item ' + (i === curPage ? 'active' : '') + '"><a class="page-link" id="btn' + i + '" type="button">' + i + '</a></li>');
					}
					memberList(curPage);
					initPagination();
				}
			});

			$('#prevPage').on('click', function(){
				if(curPage > 1){
					curPage--;
					memberList(curPage);
					initPagination();
				}
			});

			paginationContainer.on('click', '.page-link', function(event){
				event.preventDefault();
				const pageText = $(this).text().trim();

				if(!isNaN(pageText)){
					curPage = parseInt(pageText);
					memberList(curPage);
					initPagination();
				}
			});
		}

		function bindPaginationHandlers(){
			$('#pagenation').on('click', '.page-link', function(event){
				event.preventDefault();

				const pageText = $(this).text().trim();

				if(!isNan(pageText)){
					curPage = parseInt(pageText);
					memberList(curPage);
					initPagination();
				}
			});
		}
		
		/* 전체 데이터 수를 알려주는 함수*/
		function getTotal() {
			$.ajax({
				url: "/admin/count",
				type: 'GET',
				dataType: "json",
				contentType: "application/json;charset=utf-8",
				beforeSend: function (xhr) {
					xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
				},
				success: function (data) {
					$.each(data, function (index, cnt) {
						totalItem = data.cnt;
						$('#waitCnt').text(data.cnt);
						//페이징
						totalPages = Math.ceil(totalItem / itemsPerPage);
						initPagination();
						bindPaginationHandlers(); 				
					});
				}, error: function () {
					console.log("다시 짜라.")
				}
			});
		}
				
		function memberList(page) {
			$.ajax({
				url: "/admin/wait2",
				type: "GET",
				data: { curPage: page },
				dataType: "json",
				contentType: "application/json;charset=utf-8",
				beforeSend: function (xhr) {
					xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
				},
				success: function (data) {
					let tbody = $('.gridjs-tbody')
					tbody.empty();
					$.each(data, function (index, memberVO) {
						// memberVO.memBirth를 연-월-일 형식으로 변환
						let memBirthDate = new Date(memberVO.memBirth);
						let memBirthFormatted = memBirthDate.getFullYear() + '.' + ('0' + (memBirthDate.getMonth() + 1)).slice(-2) + '.' + ('0' + memBirthDate.getDate()).slice(-2);

						// memberVO.regDt를 연-월-일 시:분:초 형식으로 변환	
						let regDtDate = new Date(memberVO.regDt);
						let regDtFormatted = regDtDate.getFullYear() + '.' + ('0' + (regDtDate.getMonth() + 1)).slice(-2) + '.' + ('0' + regDtDate.getDate()).slice(-2) + ' ' + ('0' + regDtDate.getHours()).slice(-2) + ':' + ('0' + regDtDate.getMinutes()).slice(-2) + ':' + ('0' + regDtDate.getSeconds()).slice(-2);
						let memTelno = memberVO.memTelno;
						if (memTelno.length === 11) {
							memTelno = memTelno.replace(/(\d{3})(\d{4})(\d{4})/, '$1-$2-$3');
						} else if (memTelno.length === 10) {
							if (memTelno.startsWith("02")) {
								memTelno = memTelno.replace(/(02)(\d{4})(\d{4})/, '$1-$2-$3');
							} else {
								memTelno = memTelno.replace(/(\d{3})(\d{3})(\d{4})/, '$1-$2-$3');
							}
						} else if (memTelno.length === 9 && memTelno.startsWith("02")) {
							memTelno = memTelno.replace(/(02)(\d{3})(\d{4})/, '$1-$2-$3');
						} else if (memTelno.length === 8) {
							memTelno = memTelno.replace(/(\d{4})(\d{4})/, '$1-$2');
						}

						let tr = $('<tr>');
						tr.append($('<td>').addClass('gridjs-td').text(memberVO.memId));
						tr.append($('<td>').addClass('gridjs-td').text(memberVO.memNm));
						tr.append($('<td>').addClass('gridjs-td').text(memberVO.roomCode));
						tr.append($('<td>').addClass('gridjs-td').text(memTelno));
						tr.append($('<td>').addClass('gridjs-td').text(memBirthFormatted));
						tr.append($('<td>').addClass('gridjs-td').text(memberVO.hshldrId));
						tr.append($('<td>').addClass('gridjs-td').text(regDtFormatted))
						//버트은~
						//let memId = memberVO.memId;
						let okBtn = $('<button>')
							.addClass('btn btn-success')
							.text('승인')
							.click(function () {
								if (confirm("해당 입주민을 승인 하시겠습니까?")) {
									$.ajax({
										url: "/admin/signOk",
										type: "POST",
										data: memberVO.memId,
										dataType: "text",
										contentType: "application/json;charset=utf-8",
										beforeSend:
											function (xhr) {
												xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
											},
										success: function (data) {
											alert("가입 승인")
											memberList(curPage); // 목록 갱신
											getTotal();
										},
										error: function (xhr, status, error) {
											console.log("에러 발생: " + error);
											alert("가입 승인 중 에러 발생");
										}
									})
								}
							})

						let rejectBtn = $('<button>')
							.addClass('btn btn-danger')
							.text('반려')
							.click(function () {
								if (confirm("해당 입주민을 반려 하시겠습니까?")) {
									$.ajax({
										url: "/admin/signNo",
										type: "POST",
										data: memberVO.memId,
										dataType: "text",
										contentType: "application/json;charset=utf-8",
										beforeSend:
											function (xhr) {
												xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
											},
										success: function (data) {
											alert("가입 반려")
											//자동 갱신
											memberList(curPage); // 목록 갱신
											getTotal();
										},
										error: function (xhr, status, error) {
											console.log("에러 발생: " + error);
											alert("가입 반려 중 에러 발생");
										}
									});
								}
							});

						let actionCell = $('<td>').addClass('gridjs-td');
						actionCell.append(okBtn).append(' ').append(rejectBtn);
						tr.append(actionCell);

						tbody.append(tr);

					})
				},
				error: function () {
					alert("에러 문의 사항 : 정명진 <- 허접")
				}
			});
		}

		getTotal();
	});	
</script>