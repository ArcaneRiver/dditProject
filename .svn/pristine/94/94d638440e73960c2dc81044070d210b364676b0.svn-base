package com.homecat.sweethome.controller.member;



import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import org.springframework.util.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.homecat.sweethome.service.member.SignUpService;
import com.homecat.sweethome.vo.member.MemberVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
public class SignUpController {

	@Autowired
	SignUpService signUpSerivce;
	
	@RequestMapping(value="/select", method = RequestMethod.GET)
	public String SelectMem() {
		log.info("회원가입 선택하기!");
		
		return "member/select";
	}
	
	@RequestMapping(value="/signup", method = RequestMethod.GET)
	public String SignUp() {
		log.info("회원가입 페이지");
		
		return "member/signup";
	}
	
	@RequestMapping("/signUp.do")
	@ResponseBody
	public String signUpAjax(MultipartHttpServletRequest request) {
		
		MemberVO memberVO = new MemberVO();
		memberVO.setMemId(request.getParameter("memId"));
		
		log.info("회원가입 시도.");
		log.info(memberVO.toString());
		
		String uploadDir = "/resources/images/profile";
		

	    try {
	        // 프로필 이미지 파일 파싱
	        MultipartFile profImgFile = request.getFile("profImg");
	        if (profImgFile != null && !profImgFile.isEmpty()) {
	            // 파일 업로드 처리
	            String fileName = StringUtils.cleanPath(profImgFile.getOriginalFilename());
	            String extension = StringUtils.getFilenameExtension(fileName);
	            String uploadedFileName = memberVO.getMemId() + "Photo." + extension;

	            Path uploadPath = Paths.get(uploadDir);
	            Path filePath = uploadPath.resolve(uploadedFileName);
	            Files.copy(profImgFile.getInputStream(), filePath);

	            memberVO.setProfImg(uploadedFileName);
	        }

	        int rst = signUpSerivce.signUpMember(memberVO);

	        if (rst == 1) {
	            log.info("가입 신청완료.");
	            return "member/select";
	        } else {
	            log.info("가입 실패.");
	            return "member/signup";
	        }
	    } catch (IOException e) {
	        log.error("파일 업로드 실패.");
	        log.error(e.getMessage());
	        return "업로드 실패ㅠㅠ";
	    }
		
	}
	
}
